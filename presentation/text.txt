* Слайд 1  - 15c (очень быстро, впритык)
Доброго времени суток, уважаемые зрители!
Мы: Тимин Александр и Кошельков Сергей,
а также руководитель проекта Нестор Владимир Олегович,
представляем Вашему вниманию подведение итогов
семестровой работы по проектной практике.
Тема номер 45:
"Создание образа для обучения расследованию инцидентов ИБ"
* Слайд 2  - 10с (очень быстро, впритык)
Наш проект актуален в настоящее время, так как
- наглядно предоставляет один из способов расследования инцидента
- включает в себя пример атаки на современную ОС
- уникален на фоне существующих аналогов
* Слайд 3  - 8с (очень быстро, впритык)
Под уникальностью следует понимать то,
что существующие аналоги в основном дают лишь теоретические знания,
в то время, как наш проект ориентирован в первую очередь на практику
* Слайд 4  - 5с (очень быстро)
Цель работы: Создать образ,
по которому будет возможно обучение расследованию
инцидентов информационной безопасности.
* Слайд 5  - 12с (очень быстро)
На пути к цели перед нами стояли задачи:
- проектирование и настройка локальной сети
- изучение и настройка политик безопасности Windows
- проектирование собственной атаки
- проведение атаки
- а также, расследование данного инцидента
* Слайд 6  - 5с (очень быстро, впритык)
Для удобства совмесной работы над проектом
нами была спроектирована и настроена локальная сеть
* Слайд 7  - 27с (я или ток проснулся или тут быстро надо)   
Для изучения изменений внутри нашего атакуемого образа, необходимо настроить  
некоторые политки безопасности Windows.   
Вызовем служубу Локальной политики безопасности,   
с помощью диалогового окна "Выполнить" - введя туда secpol.msc   
Далее настроим интересующие нас политики аудита.  
Наиболее сильно нас интересует - Аудит создание процесса  
Ставим ему аудит события - успех.   
Теперь, эти события будут отображаться в Журнале событий Windows, что поможет нам в расследовании.   
* Слайд 8  - 6c (очень быстро, впритык)
Перед совершением любой атаки
необходимо всё тщательно спланировать,
например, основываясь на этапах Cyber KillChain
* Слайд 9  - 10с (очень быстро, впритык)
Мы определили цель атаки - шифрование файлов
на компьютерах вымышленной компании.
Мы спланировали атаку, состоящую из трех основных
пунктов: Вооружение, Доставка, Эксплуатация.
* Слайд 10 - 10с (очень быстро)
Этап вооружения начался с написания кода шифровальщика.
Мы решили написать код самим, а не скачивать готовые решения, чтобы
избежать лишнего внимания к зараженному файлу со стороны антивируса
* Слайд 11 - 5с (очень быстро)
При помощи утилиты pyinstaller мы сконвертировали
python скрипт в исполняемый файл
* Слайд 12 - 10с (очень быстро)
Используя возможности sfx-архива WinRAR, мы "склеили" шифровальщик
с "чистым" установщиком программы sublime text.
Тем самым мы получили троянскую программу
* Слайд 13 - 35с (быстро)
Далее начинается этап - Доставка
Состоит он в том, что нашу троянскую программу мы загрузили
на специально созданный для этой цели сайт-клон
корпоративного портала атакуемой компании.
После этого мы разослали всем ее сотрудникам
электронные письма якобы от имени начальника с указанием:
"Проверить важное обновление на портале".
После чего несколько доверчивых сотрудников компании
перешли по ссылке на сайт-клон и скачали наш троян.

Тут начинается этап: Эксплуатация.
Установив себе sublime text они в придачу неосознанно запустили
процесс шифрования файлов на своих компьютерах.
Ну чтож, шалость удалась!
* Слайд 14 - 5с (быстро)
Для расследования инцидента скачаем и установим утилите Autopsy с её официального сайта.   
* Слайд 15 - 7с (быстро)
Запускаем программу, создаём новый кейс и загружаем туда наш образ, программа проанализирует данные и мы сможем начать расследование   
* Слайд 16 - 10с (быстро)
Изучим любой атакованный файл, просмотрим его содержимое и заметим строчку:" Created by pyAesCrypt 6.0.0". Это наша первая улика, запомним её   
* Слайд 17 - 15с (быстро)
Изучим timeline первых атакованных файлов, и посмотрим предшествующие атаке события, замечаем запуск некой программы, после которой все пошло не по плану.  
Sublime_text, исследуем этот файл детальнее. Он явно не так прост, как кажется.   
* Слайд 18 - 15с (нормально)
Файл был скачен на систему с корпоративного сайта,что отправил босс. Загрузим этот файл из образа и изучим его на нашей расследовательской машине.   
Раскроем содержимое установщика и заметим, что это два склееных установщика, здесь явно что-то неладное, поэтому проверим обе компоненты.
* Слайд 19 - 5с (быстро)
Проверим первый компонент на VirusTotal. Он чист.Так что он вне подозрений.
* Слайд 20 - 9с (быстро)
Проверим второй компонент на VirusTotal. А вот он не так прост, 14 из 65 показали наличие вредоносного кода, изучим этот файл детально.
* Слайд 21 - 12c (быстро)
Рассмотрим содержимое второй компоненты в Autopsy. Находим строчку pyAesCrypt. Кажется, где-то эта строчка уже была, она была в зашифрованном файле   
Похоже, виновник обнаружен, но что же такое pyAesCrypt?
* Слайд 22 - 10с (быстро)
Находим информацию об pyAesCrpyt. Это библиотека Python для шифрования. Она использует симметричный алгоритм шифрования AES256-CBC. Чтож, кажется виновник найден   
и это установщик, скачанный с корпоративного сайта.   
* Слайд 23 - 25с (быстро)
Подытоживая, отметим, что в процессе работы над проектом
нами были выполнены все пять поставленных задач.
Но на этом наша работа не останавливается, так как
имеется задел на "расширение" проекта, а именно, в планах:
- расширить список проводимых атак
- углубиться в настройку сети и политик безопасности
- а также совершенствоваться в расследовании,
к примеру, мониторить трафик внутри сети и позже анализировать его.
* Слайд 24 - 10с (нормально)
Приводим ссылки на материалы проекта, а также на обраную связь.
На этом наша презентация подходит к концу
Спасибо за внимание! До встречи!
